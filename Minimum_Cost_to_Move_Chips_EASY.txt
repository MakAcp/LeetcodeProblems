class Solution {
    public int minCostToMoveChips(int[] position) {
        int cost=0;
        int counteven=0;
        int countodd=0;
        int[] arr=new int[2];
        if(position.length==2)
        {
            cost=CostCalculation(position[0],position[1]);
            return cost;
        }
        else
        {

            arr=countEvenOdd(position);
            counteven=arr[0];
            countodd=arr[1];
            if(counteven>countodd)
            {
                return countodd;
            }
            else
            {
                return counteven;    
            }
        }
    }
    int CostCalculation(int place, int target)
    {
        if(Math.abs(target-place)%2==0)
        {
            return 0;
        }
        else
        {
            return 1;
        }
    }
    int[] countEvenOdd(int[] position)
    {
        int[] evenodd=new int[2];
         for(int i=0;i<position.length;i++)
            {
            if(position[i]%2==0)
            {
                evenodd[0]=evenodd[0]+1;
            }
            else
            {
                 evenodd[1]=evenodd[1]+1;
            }    
            }
           return evenodd; 
    }
}
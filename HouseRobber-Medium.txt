class Solution {
    public int rob(int[] nums) {
        int[] result= new int[nums.length];
        if(nums.length==0)
        {
            return 0;
        }
        if(nums.length==1)
        {
            return nums[0];
        }
        if(nums.length==2)
        {
            if(nums[0]>nums[1])
            {
                return nums[0];
            }
            else
            {
                return nums[1];
            }
        }
        if(nums.length==3)
        {
            if(nums[0]+nums[2]>nums[1])
            {
                return nums[0]+nums[2];
            }
            else
            {
                return nums[1];
            }
        }
        result[0]=nums[0];
        result[1]=nums[1];
        if(nums[0]+nums[2]>nums[1])
        {
         result[2]=nums[0]+nums[2];
        }
        else
        {
         result[2]=nums[1];
        }
        for(int i=3;i<nums.length;i++)
        {
         if(nums[i]+result[i-2]>nums[i]+result[i-3])
         {
             result[i]=nums[i]+result[i-2];
         }
            else
            {
                result[i]=nums[i]+result[i-3];
            }
        }
        System.out.println(result[nums.length-1]);
         System.out.println(result[nums.length-2]);
        if(result[nums.length-1]>result[nums.length-2])
        {
            return result[nums.length-1];
        }
        else
        {
            return result[nums.length-2];
        }
        
    }
}




DP program - Keep track of previous highest sum i-2 and i-3(when array length more than 3)
